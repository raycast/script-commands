# Template example for creating quip_config.ini with chezmoi
# (https://www.chezmoi.io/) using values stored in KeePassXC. I use this
# template to generate my personal configuration file. I keep in KeepassXC two
# items:
#
# - "Quip personal token", which contains my API token in the Password field,
#   and has two custom attributes named "BaseURL" and "APIURL", which are used
#   to populate the corresponding fields below.
#
# - "Quip documents", which contains custom attributes for the FolderID,
#   TemplateID and DocID values for all sections. For example, the FolderID for
#   "Note" items is called "Note.FolderID".
#
# You need to configure chezmoi to know where to find your KeePassXC database,
# and your Keyfile if you use one. My config file ~/.config/chezmoi/chezmoi.toml
# looks like this:
#
# [keepassxc]
#     database = "/path/to/my/KeePassXC/Passwords.kdbx"
#     args = ["-k", "/path/to/my/KeePassXC/keyfile.keyx"]
#
# If you don't use chezmoi for all your dotfiles, you can generate a single file
# by running chezmoi like this:
#
# chezmoi execute-template -o quip_config.ini < quip_config.chezmoi.template.ini
#
# Note: if you use 1Password, you can also use chezmoi, or use the native `op
# inject` (https://developer.1password.com/docs/cli/reference/commands/inject/)


# Values in the DEFAULT section are inherited for all the other sections, but
# you can override any of them in the individual sections below.
[DEFAULT]
###
### Authentication
###

# Quip API token. Get one at https://quip.com/api/personal-token
APIToken = {{ (keepassxc "Quip personal token").Password }}

###
### Behaviors for document creation
###

# Prepend date to the title of new documents?
PrependDate = yes
# Whether to automatically open the created documents
OpenDoc = yes
# Whether to copy the URL of newly created documents to the clipboard
CopyURLToClipboard = no
# Whether to open documents in the app or in the browser
UseQuipApp = yes
# Default values for Raycast command metadata
CommandTitle = New ${section} in Quip
CommandArgPlaceholder = ${section} title
# You can set a default FolderID here. If not set, new documents are placed
# in your top-level "Private" Quip folder
# FolderID =
# Default action, can be "create" or "add"
Action = create
# Produce a notification at the end?
Notify = no
# Whether the command should accept an empty argument and in that case just open
# the document (this applies only to 'add' actions)
OpenDocIfEmptyArg = no

###
### URLs. Defaults should be OK for most users.
###

# Quip base URL to use
BaseURL = {{ keepassxcAttribute "Quip personal token" "BaseURL" }}
# Quip API URL to use
APIURL = {{ keepassxcAttribute "Quip personal token" "APIURL" }}

###
### Each section below defines a new "document type", which can be stored in
### different folders and override any of the defaults.
###
### The section names are arbitrary, and you should define at least the FolderID
### attribute for each of them (but it's not mandatory)
### The document/folder IDs can be obtained by using the "Copy Link" menu
### option in Quip. The ID is the part that comes right after the hostname
### in the URL. For example: https://quip.com/A7RmAB1oNeuL
###

### Below custom sections for different document types

## First the 'create' actions, which create new documents in different folders,
## with different templates.

[doc]
# Document without a folder, created in the default location.

[Note]
# Quip Folder ID for general notes.
FolderID = {{ keepassxcAttribute "Quip documents" "Note.FolderID" }}

[Meeting notes]
# Quip Folder ID for meeting notes.
FolderID = {{ keepassxcAttribute "Quip documents" "Meetings.FolderID" }}
# Meeting notes template
TemplateID = {{ keepassxcAttribute "Quip documents" "Meetings.TemplateID" }}
# Some custom metadata for the Raycast command
CommandArgPlaceholder = Meeting title

[Project page]
# Quip Folder ID for project pages
FolderID = {{ keepassxcAttribute "Quip documents" "Project.FolderID" }}
# Project notes template
TemplateID = {{ keepassxcAttribute "Quip documents" "Project.TemplateID" }}
# Project don't get the date prepended
PrependDate = no
# Metadata for the Raycast command
CommandArgPlaceholder = Project name

[Training/course notes]
FolderID = {{ keepassxcAttribute "Quip documents" "Training.FolderID" }}

## Now the 'add' actions, which add text to an existing document. These sections
## will not work until you add the appropriate 'DocID' parameter.

# Command to add todo items to an existing Quip document.
[TODO]
action = add
# The ID of the document where the text should be added
DocID = {{ keepassxcAttribute "Quip documents" "TODO.DocID" }}
# Prepend the date to the text?
PrependDate = no
# Produce a notification and don't open the doc. But if an empty argument is
# given, open the document.
Notify = yes
OpenDoc = no
OpenDocIfEmptyArg = yes
# Add the text as a list item? Value can be "todo", "bullet" or "num". Anything
# else adds is as regular text. Note that the text you add can contain Markdown
# markup.
ListType = todo

# Command to add items to a "brag document" (a doc where I keep a record of my
# accomplishments).
[BRAG item]
action = add
# The ID of the document where the text should be added
DocID = {{ keepassxcAttribute "Quip documents" "BRAG.DocID" }}
# Prepend the date to the text?
PrependDate = yes
# Produce a notification and don't open the doc. But if an empty argument is
# given, open the document.
Notify = yes
OpenDoc = no
OpenDocIfEmptyArg = yes
# Add the text as a list item? Value can be "todo", "bullet" or "num". Anything
# else adds is as regular text. Note that the text you add can contain Markdown
# markup.
ListType = none
# Metadata for the Raycast command
CommandArgPlaceholder = BRAG text
